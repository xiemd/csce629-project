import java.util.Random;

public class test {
	public static void main(String[] args){
		graph g = GraphGenerator.randomGraph1(100, 6);
		System.out.println(g.edge);
		

		
		
		
		
		
//		graph test = new graph(10);
//		test.addEdge(2, 1, 5);
//		Edge e = new Edge(1, 2);
//		System.out.println(test.adj[2].contains(e));
		
		
		
//		graph g = new graph(9);
//		g.addEdge(1,2, 4);
//		g.addEdge(2,3, 8);
//		g.addEdge(3,4, 7);
//		g.addEdge(4,5, 9);
//		g.addEdge(5,6, 10);
//		g.addEdge(6,7, 2);
//		g.addEdge(7,8, 1);
//		g.addEdge(8,9, 7);
//		g.addEdge(1,8, 8);
//		g.addEdge(2,8, 11);
//		g.addEdge(3,9, 3);
//		g.addEdge(9,7, 6);
//		g.addEdge(3,6, 4);
//		g.addEdge(4,6, 14);

		
//		System.out.println(g.edge);
		
		
//		for (int i = 1; i <= g.vertices; i++ ){
//			for (Edge e : g.adj[i]){
//				System.out.println(e);
//			}
//		}
		
//		System.out.println(RoutingAlgo.algo1(g, 1, 5)); 
//		System.out.println(RoutingAlgo.algo2(g, 1, 5));
//		

				
		
		

		
		
//		maxHeap H = new maxHeap(10);
//
//		H.insert(1, 35);
//		H.insert(2, 33);
//		H.insert(3, 42);
//		H.insert(4, 10);
//		H.insert(5, 14);
//		H.insert(6, 19);
//		H.insert(7, 27);
//		H.insert(8, 44);
//		H.insert(9, 26);
//		H.insert(10, 31);
////
////		System.out.println(H.getVertices() + " should be [0, 8, 3, 1, 2, 10, 6, 7, 4, 9, 5]");
//
//		H.delete(8);
//		System.out.println(H.getVertices() + " should be [0, 3, 2, 1, 9, 10, 6, 7, 4, 5, 0]");
//		H.delete(1);
//		H.delete(4);
//		H.delete(2);
//		H.delete(5);
//		
		

	}
}
