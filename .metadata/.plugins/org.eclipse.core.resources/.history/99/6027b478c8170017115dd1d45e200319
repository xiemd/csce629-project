import java.util.ArrayList;
import java.util.Random;

public class Main{
	public static void main(String[] args){
		
		Random rand = new Random();
		graph[] rdg1 = new graph[5];
		graph[] rdg2 = new graph[5];
	
		for (int i = 0; i < 5; i++ ){
//			while(s[i] == t[i]){
//				s[i] = rand.nextInt(5000);
//				t[i] = rand.nextInt(5000);
//			}
//			generate the graph and add path from s to t to go through all other vertices.
			rdg1[i] = GraphGenerator.randomGraph1(5000, 6);
			rdg2[i] = GraphGenerator.randomGraph2(5000, 0.2);
		}
		System.out.println("the graph generation is done!");
		
//		main testing part

		System.out.println("");
		System.out.println("Start the test:");
		for (int i = 0; i < 5; i++ ){
			System.out.println(i + 1 + " pair of graph");
			for (int j = 0; j < 5; j++){
				System.out.println(j + " pair of (s,t) on graph pair" + i );
				int s = rand.nextInt(5000);
				int t = rand.nextInt(5000);
				rdg1[i].addAllPath(s, t);
				rdg2[i].addAllPath(s, t);
				System.out.println("rdg1 time on algorithm 1");
				RoutingAlgo.algo1(rdg1[i], s, t);
				System.out.println("rdg1 time on algorithm 2");
				RoutingAlgo.algo2(rdg1[i], s, t);
				System.out.println("rdg1 time on algorithm 3");
				RoutingAlgo.algo3(rdg1[i], s, t);

				System.out.println("rdg2 time on algorithm 1");
				RoutingAlgo.algo1(rdg2[i], s, t);
				System.out.println("rdg2 time on algorithm 2");
				RoutingAlgo.algo2(rdg2[i], s, t);
				System.out.println("rdg2 time on algorithm 3");
				RoutingAlgo.algo3(rdg2[i], s, t);
			}
		}
	}
}




